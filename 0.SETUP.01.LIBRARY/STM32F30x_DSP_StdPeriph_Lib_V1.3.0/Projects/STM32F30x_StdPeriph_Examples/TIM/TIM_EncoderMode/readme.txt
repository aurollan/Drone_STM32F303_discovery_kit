/**
  @page TIM_EncoderMode TIM Encoder mode Description
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    TIM/TIM_EncoderMode/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.3
  * @date    15-December-2021
  * @brief   TIM Encoder Mode Description.
  ******************************************************************************
  *
  * Copyright (c) 2015 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure the TIM peripheral to interface with a encoder sensor.
The TIM3 is configured in encoder mode1: Counter counts up/down on TI2 rising edge 
depending on TI1 level 

The TIM3 Autoreload value is set to 399, so the encoder round is 400 TIM counter clock. 
An update interrupt is generated each time the TIM counter reach the Autoreload value, 
in this example 400 TIM counter clock.
 
@par Directory contents 

  - TIM/TIM_EncoderMode/stm32f30x_conf.h    Library Configuration file
  - TIM/TIM_EncoderMode/stm32f30x_it.c      Interrupt handlers
  - TIM/TIM_EncoderMode/stm32f30x_it.h      Interrupt handlers header file
  - TIM/TIM_EncoderMode/main.c              Main program
  - TIM/TIM_EncoderMode/system_stm32f30x.c  stm32f30x system source file
  
@note The "system_stm32f30x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F30x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4152 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
 
@par Hardware and Software environment

  - This example runs on STM32F303xC and STM32F303xE Devices.
  
  - This example has been tested with STMicroelectronics STM32303C-EVAL (STM32F30x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.
    
  - STM32303C-EVAL Set-up
    - None.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Projects\STM32F30x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example


 */
